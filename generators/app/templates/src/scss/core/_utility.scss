@use "../setting";

// # 相対値計算
//
// ## 引数:
// * `newsize`: 目的のサイズ
// * `context`: 継承したサイズ
// * `unit`: 出力結果に付与される単位（Default: em）
@function rs($newsize, $context, $unit:em) {
	@if $unit == "%" {
		@return #{$newsize/$context*100}#{$unit};
	} @else {
		@return #{$newsize/$context}#{$unit};
	}
}


// # フォントファミリー
//
// ## 引数:
// * `type`: フォントタイプ
@mixin font-family($type) {
	@if $type == sans-serif {
		font-family: sans-serif;
		@if $support-ie6 {
			_font-family: 'MS PGothic', sans-serif;
		}
	} @else if $type == hiragino {
		font-family: 'Hiragino Kaku Gothic Pro', Meiryo, 'MS PGothic', sans-serif;
	} @else if $type == hiragino-without-meiryo {
		font-family: 'Hiragino Kaku Gothic Pro', 'MS PGothic', sans-serif;
	} @else if $type == mincho {
		font-family: "Hiragino Mincho Pro", "HGS明朝E", "ＭＳ Ｐ明朝", serif;
	}
}


// # グリッドモジュールの下方向マージン打ち消し
//
// ## 引数:
// * `column`: 1行のカラム数
// * `nestlevel`: ネストレベル
//
// ## 参考:
// http://blog.keithclark.co.uk/targeting-first-and-last-rows-in-css-grid-layouts/
@mixin grid-lastrows-utility($column, $grid-item-tag: "li") {
	$selector: &;
	&:nth-child(#{$column}n+1):nth-last-child(-n+#{$column}),
	&:nth-child(#{$column}n+1):nth-last-child(-n+#{$column}) ~ #{$grid-item-tag}{
		margin-bottom: 0;
	}
}


// # Clearfix
// See Also: http://cssmojo.com/the-very-latest-clearfix-reloaded/
// IE11をサポートしないなら`display: flow-root`を使うこと。
//
// ## 引数:
// なし
@mixin clearfix {
	&::after {
		clear: both;
		display: block;
		content: "";
	}
}


// Media Query
// Inspiration: http://robots.thoughtbot.com/sasss-content-directive
@mixin mq($width) {
	$width-in-em-units: $width / setting.$root-font-size;

	@media only screen and (max-width: #{$width-in-em-units}em) {
		@content;
	}
}

@mixin mq-min($width, $print: false) {
	$width-in-em-units: $width / setting.$root-font-size;

	@if $print {
		@media only screen and (min-width: #{$width-in-em-units}em), print {
			@content;
		}
	} @else {
		@media only screen and (min-width: #{$width-in-em-units}em) {
			@content;
		}
	}
}

@mixin mq-range($min-width, $max-width) {
	$min-width-in-em-units: $min-width / setting.$root-font-size;
	$max-width-in-em-units: $max-width / setting.$root-font-size;

	@media only screen and (min-width: #{$min-width-in-em-units}em) and (max-width: #{$max-width-in-em-units}em) {
		@content;
	}
}


// # マウスオーバー・フォーカススタイル設定
//
// ## 引数:
// なし
@mixin pointer-enter {
	&:hover,
	&:focus{
		@content;
	}
}


// # テーブルのスクロール
//
// ## 引数:
// * `bp`: ブレークポイント
@mixin tbl-scroll($bp: 767) {
	@if unitless($bp) {
		$bp: $bp + px;
	}

	display: table;
	width: 100%;
	@media screen and (max-width: $bp) {
		display: block;
		overflow-x: auto;
		margin: 0 0 1em;
		&::-webkit-scrollbar{
			-webkit-appearance: none;
			width: 14px;
			height: 14px;
		}
		&::-webkit-scrollbar-thumb{
			border-radius: 8px;
			border: 3px solid #fff;
			background-color: rgba(0, 0, 0, .3);
		}
	}
}


// # オブジェクトの埋め込み（マルチスクリーン対応）
// レスポンシブWebデザインのページにGoogle Mapsなどを埋め込む際に利用
//
// ## 引数:
// なし
@mixin embed-responsive-object {
	position: relative;
	overflow: hidden;
	padding-bottom: 56%;
	height: 0;
	iframe {
		position: absolute;
		top: 0;
		left: 0;
		width: 100% !important;
		height: 100% !important;
	}
}


// # clamp()の生成
// https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
@function clamp-builder($min-width-px, $max-width-px, $min-font-size, $max-font-size) {
	$min-width: $min-width-px / setting.$root-font-size;
	$max-width: $max-width-px / setting.$root-font-size;
	$min-font-size-rem: $min-font-size / setting.$root-font-size;
	$max-font-size-rem: $max-font-size / setting.$root-font-size;

	$slope: ($max-font-size-rem - $min-font-size-rem) / ($max-width - $min-width);
	$y-axis-intersection: ($min-width * -1) * $slope + $min-font-size-rem;
	$slope-x100: $slope * 100;

	@return clamp(#{$min-font-size-rem}rem, #{$y-axis-intersection}rem + " + " + #{$slope-x100}vw, #{$max-font-size-rem}rem);
}
